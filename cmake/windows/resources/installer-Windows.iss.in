; IMPORTANT : This file is ONLY used when building with Inno Setup

#define MyProjectName "@CMAKE_PROJECT_NAME@"
#define MyAppName "@PLUGIN_DISPLAY_NAME@"
#define MyAppVersion "@CMAKE_PROJECT_VERSION@"
#define MyAppPublisher "@PLUGIN_AUTHOR@"
#define MyAppURL "@PLUGIN_WEBSITE@"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{@UUID_APP@}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}/help
AppUpdatesURL={#MyAppURL}/download
DefaultDirName={commonappdata}\obs-studio\plugins\{#MyProjectName}
DefaultGroupName={#MyAppName}
OutputBaseFilename={#MyAppName}-{#MyAppVersion}-Windows-Installer
Compression=lzma
SolidCompression=yes
DirExistsWarning=no
RestartIfNeededByRun=no

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: RemoveOBSNDI; Description: "Remove OBS-NDI plugin"; GroupDescription: "Clean-up";
Name: AddFirewallEntry; Description: "Allow OBS/DistroAV in Windows Firewall"; GroupDescription: "Post-Install Actions";

[Files]
Source: "..\release\Package\{#MyProjectName}\*"; DestDir: "{app}"; Flags: recursesubdirs createallsubdirs
; NOTE: Do not use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{cm:ProgramOnTheWeb,{#MyAppName}}"; Filename: "{#MyAppURL}"

[Code]
// Remove old OBS-NDI conflicting plugin - by Trouffman for DistroAV https://github.com/DistroAV/DistroAV/ & https://github.com/DistroAV/DistroAV/wiki/OBS%E2%80%90NDI-Is-Now-DistroAV
// CAREFUL : this target the old AppID.
const UninstallRegistryKey411up = 'Software\Microsoft\Windows\CurrentVersion\Uninstall\{A9039243-4FE7-45E7-8B11-7DC1ACB67B9D}_is1';
const UninstallRegistryKey410 = 'Software\Microsoft\Windows\CurrentVersion\Uninstall\{CD703FE5-1F2C-4837-BD3D-DD840D83C3E3}_is1';

function GetOldAppUninstallerPath(Param: String): String;
var
  UninstallerPathRegistry: String;
// At least one Param string is required to use this function with {code:}, can be empty.
begin
  Result := '';
// Check primary registry location version 4.11+
  if ( RegQueryStringValue(HKLM, UninstallRegistryKey411up, 'UninstallString', UninstallerPathRegistry) ) then
      Result := RemoveQuotes(UninstallerPathRegistry)
// Check alternative Registry location
  else if ( RegQueryStringValue(HKCU, UninstallRegistryKey411up, 'UninstallString', UninstallerPathRegistry) ) then
      Result := RemoveQuotes(UninstallerPathRegistry)

// Check primary registry location version 4.10
  else if ( RegQueryStringValue(HKLM, UninstallRegistryKey410, 'UninstallString', UninstallerPathRegistry) ) then
      Result := RemoveQuotes(UninstallerPathRegistry)
// Check alternative Registry location
  else if ( RegQueryStringValue(HKCU, UninstallRegistryKey410, 'UninstallString', UninstallerPathRegistry) ) then
      Result := RemoveQuotes(UninstallerPathRegistry);
end;

// Firewall Rules
// Add or Update the firewall rules to allow DistroAV & OBS
// Log entries are visible only when using /LOG
const FirewallRuleName = 'OBS - DistroAV';
const FirewallRuleGroup = 'Audio-Video Tools';
const FirewallRulesDescription = 'Rules added by DistroAV installer for ease of use.';

function SetFirewallRules(Direction: String): Boolean;
var
  ResultCode: Integer;
begin
  ResultCode := 0;
  // Delete rule if it exists
  Exec('netsh', 'advfirewall firewall delete rule name="' + FirewallRuleName + '" dir=' + Direction, '', SW_HIDE, ewWaitUntilTerminated, ResultCode)
  // Add firewall rule
  Exec('netsh', 'advfirewall firewall add rule name="' + FirewallRuleName + '" dir=' + Direction + ' action=allow program="' + ExpandConstant('{code:GetOBSDirName}\bin\64bit\obs64.exe') + '" description="' + FirewallRulesDescription + '" enable=yes', '', SW_HIDE, ewWaitUntilTerminated, ResultCode)
  if ( ResultCode = 1 ) then
    begin
      Log('Add Firewall ' + Direction + ' Rule ' + FirewallRuleName + ': Successful.');
      Result := True;
    end
  else
    begin
      Log('Add Firewall ' + Direction + ' Rule ' + FirewallRuleName + ': Failed. Code returned: ' + IntToStr(ResultCode) + '');
      Result := False;
    end;
end;

// Helper script to find the OBS installation path
// credit where it's due :
// following function comes from https://github.com/Xaymar/obs-studio_amf-encoder-plugin/blob/master/%23Resources/Installer.in.iss#L45
// This is deprecated as it is not super reliable if portable install are used. Replace with a more reliable method in the future.
function GetOBSDirName(Value: String): String;
var
  InstallPath: String;
begin
  // initialize default path, which will be returned when the following registry
  // key queries fail due to missing keys or for some different reason
  Result := '{autopf}\obs-studio';
  // query the first registry value; if this succeeds, return the obtained value
  if RegQueryStringValue(HKLM32, 'SOFTWARE\OBS Studio', '', InstallPath) then
    Result := InstallPath;
end;

// Post-Install actions
procedure CurStepChanged(CurStep: TSetupStep);
var
  ResultCode: Integer;
begin
  ResultCode := 0;
  if CurStep = ssPostInstall then
  begin
    // Clean-up old OBS-NDI plugin
    if ( IsTaskSelected('RemoveOBSNDI') ) then
    begin
      if (GetOldAppUninstallerPath('') <> '') then
        begin
          Log('Uninstalling old OBS-NDI plugin...');
          // Uninstall OBS-NDI (former plugin name)
          // This triggers the uninstall process of the old obs-ndi after installation of DistroAV but before the final dialog
          Exec(ExpandConstant('{code:GetOldAppUninstallerPath}'), '/VERYSILENT /NORESTART /SUPPRESSMSGBOXES', '', SW_HIDE, ewWaitUntilTerminated, ResultCode);
          Log('Uninstall OBS-NDI return code: ' + IntToStr(ResultCode));
        end
      else
        begin
          Log('No old OBS-NDI uninstaller found, skipping uninstallation.');
        end;

      // Remove previous obs-ndi plugin folders & files (the hard-way)
      if ( DelTree(ExpandConstant('{code:GetOBSDirName}\data\obs-plugins\obs-ndi'), True, True, True) ) then
        Log('Removed old obs-ndi plugin folder: ' + ExpandConstant('{code:GetOBSDirName}\data\obs-plugins\obs-ndi'));
      if ( DelTree(ExpandConstant('{code:GetOBSDirName}\obs-plugins\64bit\obs-ndi*'), False, True, True) ) then
      Log('Removed old obs-ndi plugin files: ' + ExpandConstant('{code:GetOBSDirName}\obs-plugins\64bit\obs-ndi*'));

    end;

    // Allow DistroAV & OBS in Windows Firewall
    if ( IsTaskSelected('AddFirewallEntry') ) then
      begin
        SetFirewallRules('out');
        SetFirewallRules('in');
      end;
  end;
end;
